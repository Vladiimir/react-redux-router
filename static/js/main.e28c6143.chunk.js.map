{"version":3,"sources":["redux/modules/counter.js","components/Counter/index.js","utils/CustomError.js","utils/UrlHelper.js","services/RestService.js","services/UsersRepo.js","redux/modules/users.js","containers/App/index.js","redux/modules/reducer.js","redux/store.js","serviceWorker.js","index.js"],"names":["INCREMENT","DECREMENT","initialState","count","getCount","state","Counter","_ref","increment","decrement","react_default","a","createElement","className","type","onClick","defaultProps","ERROR_TYPE","error","warning","CustomError","_this","_ref$type","_ref$source","source","_ref$code","code","_ref$status","status","_ref$message","message","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_renderMessage","withType","arguments","length","undefined","typePart","concat","messagePart","messageDivider","Error","window","location","pathname","match","PREFIX","_encodeParamValue","value","Array","isArray","encodedValue","map","item","encodeURI","_getBaseUrl","UrlHelper","appendQueryParams","route","params","baseUrl","paramsArray","entries","result","startsWith","_i","_ref5","_ref4","slicedToArray","key","slice","BASE_URL","RestServiceInstance","urlsWithParams","requests","urlAndParams","get","apply","toConsumableArray","Promise","all","url","requestUrl","fetch","then","_parseResponse","data","catch","res","ok","copy","clone","json","err","SyntaxError","text","reject","statusText","RepoInstance","UserRepo","_init","RestService","_data","getData","LOAD_SUCCESS","LOAD_ERROR","users","loadSuccess","getUsers","App","load","props","components_Counter","user","id","name","React","Component","connect","dispatch","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","UsersRepo","sent","stop","_x","combineReducers","counter","action","objectSpread","Store","instance","getStore","createStore","reducers","applyMiddleware","thunkMiddleware","Boolean","hostname","ReactDOM","render","BrowserRouter","es","store","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e28c6143.chunk.js","sourcesContent":["const INCREMENT = 'boilerplate/counter/INCREMENT';\nconst DECREMENT = 'boilerplate/counter/DECREMENT';\n\nconst initialState = {\n  count: 0,\n};\n\nexport default function reducer (state = initialState, action = {}) {\n  switch (action.type) {\n    case INCREMENT:\n      return {\n        count: state.count + 1,\n      };\n    case DECREMENT:\n      return {\n        count: state.count - 1,\n      };\n    default:\n      return state;\n  }\n}\n\nexport function increment () {\n  return {\n    type: INCREMENT,\n  };\n}\n\nexport function decrement () {\n  return {\n    type: DECREMENT,\n  };\n}\n\nexport const getCount = state => state.count;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\nconst Counter = ({ count, increment, decrement }) => (\n  <div className=\"counter\">\n    <p>{count}</p>\n    <button type=\"button\" onClick={increment}>\n      Increase\n    </button>\n    <button type=\"button\" onClick={decrement}>\n      Decrease\n    </button>\n  </div>\n);\n\nCounter.defaultProps = {\n  count: 0,\n};\n\nCounter.propTypes = {\n  count: PropTypes.number,\n  increment: PropTypes.func.isRequired,\n  decrement: PropTypes.func.isRequired,\n};\n\nexport default Counter;\n","const ERROR_TYPE = {\n  error: 'Error',\n  warning: 'Warning',\n};\n\nclass CustomError extends Error {\n  constructor ({\n    type = ERROR_TYPE.error, source = '', code = '', status = '', message = '',\n  }) {\n    super();\n\n    this.type = type;\n    this.source = source;\n    this.code = code;\n    this.status = status;\n    this.message = message;\n  }\n\n  getMessage () {\n    return this._renderMessage(true);\n  }\n\n  getPopupMessage () {\n    return this._renderMessage();\n  }\n\n  _renderMessage (withType = false) {\n    const {\n      type, source, code, status, message,\n    } = this;\n\n    const typePart = withType ? `${type} ` : '';\n    const messagePart = message ? `\\n ${message}` : '';\n    const messageDivider = typePart || source ? ':' : '';\n\n    return `${typePart}${source}${messageDivider} ${code} ${status} ${messagePart}`;\n  }\n}\n\nexport { CustomError, ERROR_TYPE };\n","const [PREFIX] = window.location.pathname.match(/\\/[\\w-]+/) || [];\n\nconst UrlHelper = {\n  appendQueryParams: _appendQueryParams,\n  BASE_URL: _getBaseUrl(),\n};\n\n// [2018-12-10] TODO: check sense of use URLSearchParams\nfunction _appendQueryParams (route = '', params = {}) {\n  const baseUrl = _getBaseUrl();\n  const paramsArray = Object.entries(params);\n\n  let result = baseUrl + (route.startsWith('/') ? route : `/${route}`);\n\n  if (paramsArray.length) {\n    result += '?';\n\n    for (const [key, value] of paramsArray) {\n      if (value) {\n        result += `${key}=${_encodeParamValue(value)}&`;\n      }\n    }\n    result = result.slice(0, -1);\n  }\n\n  return result;\n}\n\nfunction _encodeParamValue (value) {\n  const isArray = Array.isArray(value);\n\n  if (isArray) {\n    const encodedValue = value.map(item => (typeof item === 'string' ? `\"${item}\"` : item));\n\n    return `[${encodedValue}]`;\n  }\n  return encodeURI(value);\n}\n\nfunction _getBaseUrl () {\n  // const { origin } = window.location;\n  const origin = 'https://jsonplaceholder.typicode.com';\n\n  return origin + (PREFIX || '');\n}\n\nexport default UrlHelper;\n","import { CustomError } from '../utils/CustomError';\nimport UrlHelper from '../utils/UrlHelper';\n\nclass RestService {\n  async getParallel (urlsWithParams = []) {\n    const requests = urlsWithParams.map(urlAndParams => this.get(...urlAndParams));\n\n    return Promise.all(requests);\n  }\n\n  async get (url, params = {}) {\n    const requestUrl = UrlHelper.appendQueryParams(url, params);\n\n    return window.fetch(requestUrl)\n      .then(this._parseResponse)\n      .then(data => ({ data }))\n      .catch(error => ({ error }));\n  }\n\n  _parseResponse (res) {\n    if (res.ok) {\n      const copy = res.clone();\n      // Should check for parsing error in case of string response\n      return res\n        .json()\n        .catch(err => (err instanceof SyntaxError ? copy.text() : Promise.reject(err)));\n    }\n\n    return res.text().then((text) => {\n      const error = new CustomError({\n        code: res.status,\n        message: text,\n        status: res.statusText,\n      });\n\n      return Promise.reject(error);\n    });\n  }\n}\n\nconst RestServiceInstance = new RestService();\n\nexport default RestServiceInstance;\n","import RestService from './RestService';\n\nconst ENDPOINT = '/users';\n\nclass UserRepo {\n  constructor () {\n    this._init();\n  }\n\n  async load (params) {\n    this._init();\n\n    const { data, error } = await RestService.get(ENDPOINT, params);\n\n    if (!error) {\n      // TODO: discuss naming convention with BE\n      this._data = data;\n    } else {\n      return error;\n    }\n\n    return this.getData();\n  }\n\n  getData () {\n    return this._data;\n  }\n\n  _init () {\n    this._data = [];\n  }\n}\n\nconst RepoInstance = new UserRepo();\n\nexport default RepoInstance;\n","import UsersRepo from '../../services/UsersRepo';\nimport { CustomError } from '../../utils/CustomError';\n\nconst LOAD_SUCCESS = 'boilerplate/users/LOAD_SUCCESS';\nconst LOAD_ERROR = 'boilerplate/users/LOAD_ERROR';\n\nconst initialState = {\n  users: [],\n  error: null,\n};\n\nexport default function reducer (state = initialState, action = {}) {\n  switch (action.type) {\n    case LOAD_SUCCESS:\n      return {\n        ...state,\n        users: action.data,\n        error: null,\n      };\n    case LOAD_ERROR:\n      return {\n        ...state,\n        users: [],\n        error: action.data,\n      };\n    default:\n      return state;\n  }\n}\n\nexport function loadUsers () {\n  return async (dispatch) => {\n    const response = await UsersRepo.load();\n    if (response instanceof CustomError) {\n      dispatch(loadError(response));\n    } else {\n      dispatch(loadSuccess(response));\n    }\n  };\n}\n\nexport function loadError (data) {\n  return {\n    type: LOAD_ERROR,\n    data,\n  };\n}\n\nexport function loadSuccess (data) {\n  return {\n    type: LOAD_SUCCESS,\n    data,\n  };\n}\n\nexport const getUsers = state => state.users.users;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { increment, decrement, getCount } from '../../redux/modules/counter';\nimport Counter from '../../components/Counter';\nimport { loadUsers, getUsers } from '../../redux/modules/users';\nimport './style.scss';\n\nclass App extends React.Component {\n  componentDidMount () {\n    const { load } = this.props;\n    load();\n  }\n\n  render () {\n    const { users } = this.props;\n\n    return (\n      <div className=\"App\">\n        <Counter\n          {...this.props}\n        />\n        {users.map(user => (<p key={user.id}>{user.name}</p>))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  count: getCount(state),\n  users: getUsers(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  increment: () => dispatch(increment()),\n  decrement: () => dispatch(decrement()),\n  load: () => dispatch(loadUsers()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\n\nimport counter from './counter';\nimport users from './users';\n\nexport default combineReducers({\n  counter,\n  users,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport reducers from './modules/reducer';\n\nconst Store = {\n  instance: null,\n\n  getStore () {\n    if (!this.instance) {\n      this.instance = createStore(reducers, applyMiddleware(thunkMiddleware));\n    }\n\n    return this.instance;\n  },\n};\n\nexport default Store.getStore();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\n// import Router from './routes';\nimport App from './containers/App';\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// ReactDOM.render(\n//   <BrowserRouter>\n//     <Provider store={store}>\n//       <Router />\n//     </Provider>\n//   </BrowserRouter>,\n//   document.getElementById('root'),\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}